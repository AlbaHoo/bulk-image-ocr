name: Parse OCR CI/CD

on:
  push:
    branches: [main, master]
    paths:
      - 'client-apps/parse-ocr/**'
  pull_request:
    branches: [main, master]
    paths:
      - 'client-apps/parse-ocr/**'

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client-apps/parse-ocr

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'client-apps/parse-ocr/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run test -- --ci --coverage --watchAll=false --passWithNoTests

      - name: Make build script executable
        run: chmod +x build_prod

      - name: Build application
        run: ./build_prod

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: ./client-apps/parse-ocr

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'client-apps/parse-ocr/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Make build script executable
        run: chmod +x build_prod

      - name: Build application with custom script
        run: ./build_prod

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./client-apps/parse-ocr

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'client-apps/parse-ocr/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Make build script executable
        run: chmod +x build_prod

      - name: Build application with custom script
        run: ./build_prod

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Preview to Vercel
        id: deploy
        run: echo "url=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --yes)" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment ready!\n\nðŸ”— **Preview URL:** ${{ steps.deploy.outputs.url }}\n\nðŸ“± Test your changes before merging!`
            })
